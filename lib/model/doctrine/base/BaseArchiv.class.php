<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Archiv', 'doctrine');

/**
 * BaseArchiv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $signatur
 * @property string $name
 * @property integer $type
 * @property string $beschreibung
 * @property string $user_description
 * @property string $contactperson
 * @property string $contactperson_filename
 * @property integer $count_ve
 * @property integer $count_docs
 * @property integer $count_userdocs
 * @property integer $status
 * @property Doctrine_Collection $MyArchiv
 * 
 * @method string              getSignatur()               Returns the current record's "signatur" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method integer             getType()                   Returns the current record's "type" value
 * @method string              getBeschreibung()           Returns the current record's "beschreibung" value
 * @method string              getUserDescription()        Returns the current record's "user_description" value
 * @method string              getContactperson()          Returns the current record's "contactperson" value
 * @method string              getContactpersonFilename()  Returns the current record's "contactperson_filename" value
 * @method integer             getCountVe()                Returns the current record's "count_ve" value
 * @method integer             getCountDocs()              Returns the current record's "count_docs" value
 * @method integer             getCountUserdocs()          Returns the current record's "count_userdocs" value
 * @method integer             getStatus()                 Returns the current record's "status" value
 * @method Doctrine_Collection getMyArchiv()               Returns the current record's "MyArchiv" collection
 * @method Archiv              setSignatur()               Sets the current record's "signatur" value
 * @method Archiv              setName()                   Sets the current record's "name" value
 * @method Archiv              setType()                   Sets the current record's "type" value
 * @method Archiv              setBeschreibung()           Sets the current record's "beschreibung" value
 * @method Archiv              setUserDescription()        Sets the current record's "user_description" value
 * @method Archiv              setContactperson()          Sets the current record's "contactperson" value
 * @method Archiv              setContactpersonFilename()  Sets the current record's "contactperson_filename" value
 * @method Archiv              setCountVe()                Sets the current record's "count_ve" value
 * @method Archiv              setCountDocs()              Sets the current record's "count_docs" value
 * @method Archiv              setCountUserdocs()          Sets the current record's "count_userdocs" value
 * @method Archiv              setStatus()                 Sets the current record's "status" value
 * @method Archiv              setMyArchiv()               Sets the current record's "MyArchiv" collection
 * 
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer <mettenheimer@pausanio.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArchiv extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('archiv');
        $this->hasColumn('signatur', 'string', 16, array(
             'type' => 'string',
             'length' => 16,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('beschreibung', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('user_description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('contactperson', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('contactperson_filename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('count_ve', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('count_docs', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('count_userdocs', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'notnull' => true,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'notnull' => true,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MyArchiv', array(
             'local' => 'id',
             'foreign' => 'archiv_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => false,
             ));
        $signable0 = new Doctrine_Template_Signable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($nestedset0);
        $this->actAs($signable0);
        $this->actAs($timestampable0);
    }
}