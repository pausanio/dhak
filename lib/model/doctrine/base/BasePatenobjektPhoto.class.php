<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PatenobjektPhoto', 'doctrine');

/**
 * BasePatenobjektPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $patenobjekt_id
 * @property string $filename
 * @property integer $position
 * @property Patenobjekt $Patenobjekt
 * 
 * @method integer          getPatenobjektId()  Returns the current record's "patenobjekt_id" value
 * @method string           getFilename()       Returns the current record's "filename" value
 * @method integer          getPosition()       Returns the current record's "position" value
 * @method Patenobjekt      getPatenobjekt()    Returns the current record's "Patenobjekt" value
 * @method PatenobjektPhoto setPatenobjektId()  Sets the current record's "patenobjekt_id" value
 * @method PatenobjektPhoto setFilename()       Sets the current record's "filename" value
 * @method PatenobjektPhoto setPosition()       Sets the current record's "position" value
 * @method PatenobjektPhoto setPatenobjekt()    Sets the current record's "Patenobjekt" value
 * 
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer <mettenheimer@pausanio.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePatenobjektPhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('patenobjekt_photo');
        $this->hasColumn('patenobjekt_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Patenobjekt', array(
             'local' => 'patenobjekt_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}