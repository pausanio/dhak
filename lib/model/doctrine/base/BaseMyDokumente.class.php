<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MyDokumente', 'doctrine');

/**
 * BaseMyDokumente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $dokument_id
 * @property string $viewer_settings
 * @property clob $personal_comments
 * @property Dokument $Dokumente
 * @property sfGuardUser $User
 * 
 * @method integer     getDokumentId()        Returns the current record's "dokument_id" value
 * @method string      getViewerSettings()    Returns the current record's "viewer_settings" value
 * @method clob        getPersonalComments()  Returns the current record's "personal_comments" value
 * @method Dokument    getDokumente()         Returns the current record's "Dokumente" value
 * @method sfGuardUser getUser()              Returns the current record's "User" value
 * @method MyDokumente setDokumentId()        Sets the current record's "dokument_id" value
 * @method MyDokumente setViewerSettings()    Sets the current record's "viewer_settings" value
 * @method MyDokumente setPersonalComments()  Sets the current record's "personal_comments" value
 * @method MyDokumente setDokumente()         Sets the current record's "Dokumente" value
 * @method MyDokumente setUser()              Sets the current record's "User" value
 * 
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer <mettenheimer@pausanio.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMyDokumente extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('my_dokumente');
        $this->hasColumn('dokument_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('viewer_settings', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('personal_comments', 'clob', null, array(
             'type' => 'clob',
             ));


        $this->index('dokument_index', array(
             'fields' => 
             array(
              0 => 'dokument_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dokument as Dokumente', array(
             'local' => 'dokument_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'created_by',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $signable0 = new Doctrine_Template_Signable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($signable0);
        $this->actAs($timestampable0);
    }
}