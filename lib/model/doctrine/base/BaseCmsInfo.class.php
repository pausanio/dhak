<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CmsInfo', 'doctrine');

/**
 * BaseCmsInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $route_name
 * @property clob $text_navi
 * @property clob $text_top
 * @property clob $text
 * @property boolean $is_active
 * @property boolean $is_locked
 * 
 * @method string  getTitle()      Returns the current record's "title" value
 * @method string  getRouteName()  Returns the current record's "route_name" value
 * @method clob    getTextNavi()   Returns the current record's "text_navi" value
 * @method clob    getTextTop()    Returns the current record's "text_top" value
 * @method clob    getText()       Returns the current record's "text" value
 * @method boolean getIsActive()   Returns the current record's "is_active" value
 * @method boolean getIsLocked()   Returns the current record's "is_locked" value
 * @method CmsInfo setTitle()      Sets the current record's "title" value
 * @method CmsInfo setRouteName()  Sets the current record's "route_name" value
 * @method CmsInfo setTextNavi()   Sets the current record's "text_navi" value
 * @method CmsInfo setTextTop()    Sets the current record's "text_top" value
 * @method CmsInfo setText()       Sets the current record's "text" value
 * @method CmsInfo setIsActive()   Sets the current record's "is_active" value
 * @method CmsInfo setIsLocked()   Sets the current record's "is_locked" value
 * 
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer <mettenheimer@pausanio.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCmsInfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cms_info');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('route_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('text_navi', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('text_top', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));
        $this->hasColumn('is_locked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => true,
             ));


        $this->index('route_name', array(
             'fields' => 
             array(
              0 => 'route_name',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $signable0 = new Doctrine_Template_Signable();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
        $this->actAs($nestedset0);
    }
}