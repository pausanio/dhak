<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Verzeichnungseinheit', 'doctrine');

/**
 * BaseVerzeichnungseinheit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $archiv_id
 * @property string $bestand_sig
 * @property string $signatur
 * @property string $laufzeit
 * @property string $beschreibung
 * @property string $titel
 * @property string $sperrvermerk
 * @property string $bestellsig
 * @property string $archivgutart
 * @property string $altsig
 * @property string $umfang
 * @property string $enthaelt
 * @property string $bem
 * @property integer $status
 * @property string $user_description
 * @property Bestand $Bestand
 * @property Doctrine_Collection $Dokumente
 * @property Doctrine_Collection $MyVerzeichnungseinheit
 * 
 * @method integer              getArchivId()               Returns the current record's "archiv_id" value
 * @method string               getBestandSig()             Returns the current record's "bestand_sig" value
 * @method string               getSignatur()               Returns the current record's "signatur" value
 * @method string               getLaufzeit()               Returns the current record's "laufzeit" value
 * @method string               getBeschreibung()           Returns the current record's "beschreibung" value
 * @method string               getTitel()                  Returns the current record's "titel" value
 * @method string               getSperrvermerk()           Returns the current record's "sperrvermerk" value
 * @method string               getBestellsig()             Returns the current record's "bestellsig" value
 * @method string               getArchivgutart()           Returns the current record's "archivgutart" value
 * @method string               getAltsig()                 Returns the current record's "altsig" value
 * @method string               getUmfang()                 Returns the current record's "umfang" value
 * @method string               getEnthaelt()               Returns the current record's "enthaelt" value
 * @method string               getBem()                    Returns the current record's "bem" value
 * @method integer              getStatus()                 Returns the current record's "status" value
 * @method string               getUserDescription()        Returns the current record's "user_description" value
 * @method Bestand              getBestand()                Returns the current record's "Bestand" value
 * @method Doctrine_Collection  getDokumente()              Returns the current record's "Dokumente" collection
 * @method Doctrine_Collection  getMyVerzeichnungseinheit() Returns the current record's "MyVerzeichnungseinheit" collection
 * @method Verzeichnungseinheit setArchivId()               Sets the current record's "archiv_id" value
 * @method Verzeichnungseinheit setBestandSig()             Sets the current record's "bestand_sig" value
 * @method Verzeichnungseinheit setSignatur()               Sets the current record's "signatur" value
 * @method Verzeichnungseinheit setLaufzeit()               Sets the current record's "laufzeit" value
 * @method Verzeichnungseinheit setBeschreibung()           Sets the current record's "beschreibung" value
 * @method Verzeichnungseinheit setTitel()                  Sets the current record's "titel" value
 * @method Verzeichnungseinheit setSperrvermerk()           Sets the current record's "sperrvermerk" value
 * @method Verzeichnungseinheit setBestellsig()             Sets the current record's "bestellsig" value
 * @method Verzeichnungseinheit setArchivgutart()           Sets the current record's "archivgutart" value
 * @method Verzeichnungseinheit setAltsig()                 Sets the current record's "altsig" value
 * @method Verzeichnungseinheit setUmfang()                 Sets the current record's "umfang" value
 * @method Verzeichnungseinheit setEnthaelt()               Sets the current record's "enthaelt" value
 * @method Verzeichnungseinheit setBem()                    Sets the current record's "bem" value
 * @method Verzeichnungseinheit setStatus()                 Sets the current record's "status" value
 * @method Verzeichnungseinheit setUserDescription()        Sets the current record's "user_description" value
 * @method Verzeichnungseinheit setBestand()                Sets the current record's "Bestand" value
 * @method Verzeichnungseinheit setDokumente()              Sets the current record's "Dokumente" collection
 * @method Verzeichnungseinheit setMyVerzeichnungseinheit() Sets the current record's "MyVerzeichnungseinheit" collection
 * 
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer <mettenheimer@pausanio.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVerzeichnungseinheit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('verzeichnungseinheit');
        $this->hasColumn('archiv_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bestand_sig', 'string', 63, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 63,
             ));
        $this->hasColumn('signatur', 'string', 63, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 63,
             ));
        $this->hasColumn('laufzeit', 'string', 63, array(
             'type' => 'string',
             'length' => 63,
             ));
        $this->hasColumn('beschreibung', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('titel', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('sperrvermerk', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('bestellsig', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('archivgutart', 'string', 63, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 63,
             ));
        $this->hasColumn('altsig', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('umfang', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('enthaelt', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('bem', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'default' => 1,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('user_description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));


        $this->index('vz_archivindex', array(
             'fields' => 
             array(
              0 => 'archiv_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Bestand', array(
             'local' => 'bestand_sig',
             'foreign' => 'bestand_sig'));

        $this->hasMany('Dokument as Dokumente', array(
             'local' => 'id',
             'foreign' => 'verzeichnungseinheit_id'));

        $this->hasMany('MyVerzeichnungseinheit', array(
             'local' => 'id',
             'foreign' => 'verzeichnungseinheit_id'));

        $signable0 = new Doctrine_Template_Signable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($signable0);
        $this->actAs($timestampable0);
    }
}