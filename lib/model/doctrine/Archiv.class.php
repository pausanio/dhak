<?php

/**
 * Archiv
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    historischesarchivkoeln.de
 * @subpackage model
 * @author     Maik Mettenheimer
 * @author     Ivo Bathke
 */
class Archiv extends BaseArchiv
{

    /**
     * Static types
     *
     * @var type array
     */
    static public $types = array(
        0 => 'Root',
        1 => 'Tektonik',
        2 => 'Bestand',
        3 => 'Klassifikation',
        4 => 'Bandserie',
    );

    /**
     * Returns count_docs from root Node
     *
     * @return type
     * @todo dynamically add 'personenstandsregister'
     */
    public static function getTotalDocuments()
    {
        $total = Doctrine_Core::getTable('Archiv')->find(1)->getCountDocs();
        return $total + 1543967;
    }

    /**
     * Return the root Node
     *
     * @todo find per level=0 is to slow
     */
    public static function getRoot()
    {
        return 1;
    }

    /**
     * Returns the type
     *
     * @return type integer
     */
    public function getModel()
    {
        return self::$types[$this->getType()];
    }

    public function getMeinArchivTitle($ve = false){
        $bookmarkTitle = $this->getModel();
        if($ve){
            $bookmarkTitle = 'Signatur';
        }
        elseif($bookmarkTitle == 'Tektonik'){
            $bookmarkTitle = 'Tektonikpunkt';
        }
        return $bookmarkTitle;
    }

    /**
     * Status name
     *
     * @return type
     */
    public function getStatusName()
    {
        $status = Doctrine::getTable('Archiv')->getStatus();
        return $status[$this->getStatus()];
    }

    /**
     * Returns the type as slug
     *
     * @return type integer
     */
    public function getArchivSlug()
    {
        return static::getTypeSlug($this->getType());
    }

    public function getTypeString()
    {
        $s = 'Archiv';
        if (isset(self::$types[$this->type])) {
            $s = self::$types[$this->type];
        }
        return $s;
    }

    public function getSluggedType()
    {
        return self::getTypeSlug($this->type);
    }


    public static function getTypeSlug($id)
    {
        $s = 'archiv';
        if (isset(self::$types[$id])) {
            $s = strtolower(self::$types[$id]);
        }
        return $s;
    }

    /**
     * Returns the left Node
     *
     * @return type string
     */
    public function getLeftnode()
    {
        return Doctrine_Core::getTable('Archiv')->find($this->getLft())->getName();
    }

    /**
     * Returns the right Node
     *
     * @return type string
     */
    public function getRightnode()
    {
        return Doctrine_Core::getTable('Archiv')->find($this->getRgt())->getName();
    }

    public static function getDocumentsByQuery($query, $sort = null, $extended_query = null)
    {

        $q = Doctrine_Core::getTable('Archiv')
                ->createQuery()
                ->where('signatur LIKE ? OR name LIKE ? OR beschreibung LIKE ?', array("%$query%", "%$query%", "%$query%"));

        return $q;
    }

    public function save(Doctrine_Connection $conn = null)
    {

        $ret = parent::save($conn);

//    $this->updateLuceneIndex();

        return $ret;
    }

    public function delete(Doctrine_Connection $conn = null)
    {
//    $index = ArchivTable::getLuceneIndex();
//    foreach ($index->find('pk:' . $this->getId()) as $hit) {
//      $index->delete($hit->id);
//    }

        return parent::delete($conn);
    }

    /**
     * lucene search
     */
//  public function updateLuceneIndex()
//  {
//    $index = ArchivTable::getLuceneIndex();
//
//    // remove existing entries
//    foreach ($index->find('pk:' . $this->getId()) as $hit) {
//      $index->delete($hit->id);
//    }
//
//    $doc = new Zend_Search_Lucene_Document();
//
//    // store job primary key to identify it in the search results
//    $doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));
//
//    // index job fields
//    $doc->addField(Zend_Search_Lucene_Field::UnStored('signatur', $this->getSignatur(), 'utf-8'));
//    $doc->addField(Zend_Search_Lucene_Field::UnStored('name', $this->getName(), 'utf-8'));
//    $doc->addField(Zend_Search_Lucene_Field::UnStored('beschreibung', $this->getBeschreibung(), 'utf-8'));
//
//    // add job to the index
//    $index->addDocument($doc);
//    $index->commit();
//  }

    public function getSignaturTitle()
    {
        return $this->getSignatur() . ', ' . $this->getName();
    }
    
    public function getSignaturSlug()
    {
        return str_replace(array('/',':',"\r", "\t", "\n"), '~', $this->getSignatur() . '+' . substr($this->getName(), 0, 50));
    }

}
