CREATE TABLE archiv (id BIGINT AUTO_INCREMENT, signatur VARCHAR(16), name VARCHAR(255) NOT NULL, type SMALLINT, beschreibung TEXT, user_description TEXT, contactperson VARCHAR(255), contactperson_filename VARCHAR(255), count_ve BIGINT DEFAULT 0 NOT NULL, count_docs BIGINT DEFAULT 0 NOT NULL, count_userdocs BIGINT DEFAULT 0 NOT NULL, status TINYINT DEFAULT 1 NOT NULL, lft INT, rgt INT, level SMALLINT, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE bestand (id BIGINT AUTO_INCREMENT, archiv_id BIGINT, bestand_sig VARCHAR(63) NOT NULL, bestandsname TEXT NOT NULL, laufzeit VARCHAR(63), bestand_inhalt TEXT, umfang TEXT, bem TEXT, bestandsgeschichte TEXT, sperrvermerk VARCHAR(255), abg_stelle VARCHAR(255), rechtsstatus VARCHAR(255), status TINYINT DEFAULT 1 NOT NULL, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX archivindex_idx (archiv_id), INDEX bestandsigindex_idx (bestand_sig), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_info (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, route_name VARCHAR(255) NOT NULL, text_navi LONGTEXT, text_top LONGTEXT, text LONGTEXT, is_active TINYINT(1) DEFAULT '0' NOT NULL, is_locked TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, UNIQUE INDEX route_name_idx (route_name), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_slider (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, url VARCHAR(255) NOT NULL, button_text VARCHAR(42) NOT NULL, text LONGTEXT, image VARCHAR(255), layout TINYINT DEFAULT 0 NOT NULL, is_active TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, position BIGINT, UNIQUE INDEX cms_slider_position_sortable_idx (position), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE cms_text (id BIGINT AUTO_INCREMENT, module VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, text LONGTEXT, comment VARCHAR(255), created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE dokument (id BIGINT AUTO_INCREMENT, archiv_id BIGINT, bestand_sig VARCHAR(63), signatur VARCHAR(63), verzeichnungseinheit_id BIGINT, titel VARCHAR(255), beschreibung TEXT, filename VARCHAR(255), datierung VARCHAR(255), date_day INT DEFAULT 0 NOT NULL, date_month INT DEFAULT 0 NOT NULL, date_year INT DEFAULT 0 NOT NULL, position BIGINT, vorlagentyp_id BIGINT DEFAULT 0, kommentar TEXT, folio VARCHAR(255), copyright TEXT, einsteller VARCHAR(255), status TINYINT DEFAULT 1 NOT NULL, usergenerated TINYINT DEFAULT 0 NOT NULL, user_description TEXT, validated TINYINT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, UNIQUE INDEX dokument_position_sortable_idx (position, verzeichnungseinheit_id), INDEX verzeichnungseinheit_id_idx (verzeichnungseinheit_id), INDEX vorlagentyp_id_idx (vorlagentyp_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ha_faq (id BIGINT AUTO_INCREMENT, question TEXT NOT NULL, answer TEXT NOT NULL, pos TINYINT DEFAULT 1 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ha_news (id BIGINT AUTO_INCREMENT, news_einsteller VARCHAR(200), news_title VARCHAR(255) NOT NULL, news_text LONGTEXT NOT NULL, publish_date DATETIME, image VARCHAR(255), status TINYINT DEFAULT 0 NOT NULL, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ha_projekte (id BIGINT AUTO_INCREMENT, projekt_title TEXT, projekt_type BIGINT NOT NULL, projekt_einsteller VARCHAR(255) NOT NULL, projekt_bestand TEXT, projekt_notiz TEXT, status TINYINT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX projekt_type_idx (projekt_type), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ha_projekttypen (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE my_archiv (id BIGINT AUTO_INCREMENT, archiv_id BIGINT, personal_comments LONGTEXT, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX dokument_index_idx (archiv_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE my_dokumente (id BIGINT AUTO_INCREMENT, dokument_id BIGINT, viewer_settings TEXT, personal_comments LONGTEXT, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX dokument_index_idx (dokument_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE my_verzeichnungseinheit (id BIGINT AUTO_INCREMENT, verzeichnungseinheit_id BIGINT, viewer_settings TEXT, personal_comments LONGTEXT, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX dokument_index_idx (verzeichnungseinheit_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE patenobjekt (id BIGINT AUTO_INCREMENT, type SMALLINT NOT NULL, titel VARCHAR(255) NOT NULL, beschreibung TEXT, inhalt TEXT, zustand TEXT, restaurierung TEXT, massnahmen TEXT, status TINYINT DEFAULT 0 NOT NULL, verfuegbar TINYINT(1) DEFAULT '0' NOT NULL, tekt_nr VARCHAR(15), bestand_sig VARCHAR(63), ve_signatur VARCHAR(63), created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE patenobjekt_photo (id BIGINT AUTO_INCREMENT, patenobjekt_id BIGINT, filename VARCHAR(255) NOT NULL, position BIGINT NOT NULL, INDEX patenobjekt_id_idx (patenobjekt_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tag (id BIGINT AUTO_INCREMENT, name VARCHAR(100), is_triple TINYINT, triple_namespace VARCHAR(100), triple_key VARCHAR(100), triple_value VARCHAR(100), INDEX name_idx (name), INDEX triple1_idx (triple_namespace), INDEX triple2_idx (triple_key), INDEX triple3_idx (triple_value), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE tagging (id BIGINT AUTO_INCREMENT, tag_id BIGINT NOT NULL, taggable_model VARCHAR(30), taggable_id BIGINT, INDEX tag_idx (tag_id), INDEX taggable_idx (taggable_model, taggable_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE verweis (id BIGINT AUTO_INCREMENT, archiv_id BIGINT, bestand_sig VARCHAR(63) NOT NULL, laufzeit VARCHAR(63), beschreibung TEXT, titel TEXT NOT NULL, sperrvermerk VARCHAR(255), bestellsig VARCHAR(255), archivgutart VARCHAR(63), altsig VARCHAR(255), umfang VARCHAR(255), bem TEXT, status TINYINT DEFAULT 1 NOT NULL, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX vz_archivindex_idx (archiv_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE verzeichnungseinheit (id BIGINT AUTO_INCREMENT, archiv_id BIGINT, bestand_sig VARCHAR(63) NOT NULL, signatur VARCHAR(63) NOT NULL, laufzeit VARCHAR(63), beschreibung TEXT, titel TEXT NOT NULL, sperrvermerk VARCHAR(255), bestellsig VARCHAR(255), archivgutart VARCHAR(63), altsig VARCHAR(255), umfang TEXT, enthaelt TEXT, bem TEXT, status TINYINT DEFAULT 1 NOT NULL, user_description TEXT, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX vz_archivindex_idx (archiv_id), INDEX bestand_sig_idx (bestand_sig), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE vorgang (id BIGINT AUTO_INCREMENT, bestand_sig VARCHAR(63) NOT NULL, ve_signatur VARCHAR(63) NOT NULL, laufzeit VARCHAR(63), titel TEXT NOT NULL, bestellsig VARCHAR(255), umfang VARCHAR(255), archivgutart VARCHAR(63), status TINYINT DEFAULT 1 NOT NULL, created_by BIGINT, updated_by BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE vorlagentyp (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, code VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, title_front VARCHAR(100), title_rear VARCHAR(100), institution VARCHAR(255), person_strasse VARCHAR(255), person_plz VARCHAR(100), person_ort VARCHAR(255), person_tel VARCHAR(255), role SMALLINT DEFAULT '5' NOT NULL, status TINYINT DEFAULT '0' NOT NULL, person_support TINYINT DEFAULT '0' NOT NULL, institution_support TINYINT, institution_ort VARCHAR(255), institution_strasse VARCHAR(255), institution_plz VARCHAR(100), institution_tel VARCHAR(100), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by BIGINT, updated_by BIGINT, INDEX user_id_idx (user_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE archiv ADD CONSTRAINT archiv_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE archiv ADD CONSTRAINT archiv_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE bestand ADD CONSTRAINT bestand_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE bestand ADD CONSTRAINT bestand_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_info ADD CONSTRAINT cms_info_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_info ADD CONSTRAINT cms_info_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_slider ADD CONSTRAINT cms_slider_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_slider ADD CONSTRAINT cms_slider_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_text ADD CONSTRAINT cms_text_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE cms_text ADD CONSTRAINT cms_text_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE dokument ADD CONSTRAINT dokument_vorlagentyp_id_vorlagentyp_id FOREIGN KEY (vorlagentyp_id) REFERENCES vorlagentyp(id) ON DELETE SET NULL;
ALTER TABLE dokument ADD CONSTRAINT dokument_verzeichnungseinheit_id_verzeichnungseinheit_id FOREIGN KEY (verzeichnungseinheit_id) REFERENCES verzeichnungseinheit(id) ON DELETE CASCADE;
ALTER TABLE dokument ADD CONSTRAINT dokument_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE dokument ADD CONSTRAINT dokument_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_faq ADD CONSTRAINT ha_faq_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_faq ADD CONSTRAINT ha_faq_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_news ADD CONSTRAINT ha_news_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_news ADD CONSTRAINT ha_news_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_projekte ADD CONSTRAINT ha_projekte_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_projekte ADD CONSTRAINT ha_projekte_projekt_type_ha_projekttypen_id FOREIGN KEY (projekt_type) REFERENCES ha_projekttypen(id);
ALTER TABLE ha_projekte ADD CONSTRAINT ha_projekte_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_projekttypen ADD CONSTRAINT ha_projekttypen_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE ha_projekttypen ADD CONSTRAINT ha_projekttypen_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_archiv ADD CONSTRAINT my_archiv_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_archiv ADD CONSTRAINT my_archiv_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_archiv ADD CONSTRAINT my_archiv_archiv_id_archiv_id FOREIGN KEY (archiv_id) REFERENCES archiv(id) ON DELETE CASCADE;
ALTER TABLE my_dokumente ADD CONSTRAINT my_dokumente_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_dokumente ADD CONSTRAINT my_dokumente_dokument_id_dokument_id FOREIGN KEY (dokument_id) REFERENCES dokument(id) ON DELETE CASCADE;
ALTER TABLE my_dokumente ADD CONSTRAINT my_dokumente_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_verzeichnungseinheit ADD CONSTRAINT my_verzeichnungseinheit_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_verzeichnungseinheit ADD CONSTRAINT my_verzeichnungseinheit_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE my_verzeichnungseinheit ADD CONSTRAINT mvvi FOREIGN KEY (verzeichnungseinheit_id) REFERENCES verzeichnungseinheit(id) ON DELETE CASCADE;
ALTER TABLE patenobjekt ADD CONSTRAINT patenobjekt_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE patenobjekt ADD CONSTRAINT patenobjekt_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE patenobjekt_photo ADD CONSTRAINT patenobjekt_photo_patenobjekt_id_patenobjekt_id FOREIGN KEY (patenobjekt_id) REFERENCES patenobjekt(id) ON DELETE CASCADE;
ALTER TABLE verweis ADD CONSTRAINT verweis_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE verweis ADD CONSTRAINT verweis_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE verzeichnungseinheit ADD CONSTRAINT verzeichnungseinheit_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE verzeichnungseinheit ADD CONSTRAINT verzeichnungseinheit_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE verzeichnungseinheit ADD CONSTRAINT verzeichnungseinheit_bestand_sig_bestand_bestand_sig FOREIGN KEY (bestand_sig) REFERENCES bestand(bestand_sig);
ALTER TABLE vorgang ADD CONSTRAINT vorgang_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE vorgang ADD CONSTRAINT vorgang_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
